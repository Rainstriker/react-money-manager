[{"D:\\GitHub\\react-money-manager\\src\\pages\\Welcome.js":"1","D:\\GitHub\\react-money-manager\\src\\components\\RegistrationForm\\RegistrationForm.js":"2","D:\\GitHub\\react-money-manager\\src\\components\\ModalForm\\ModalForm.js":"3","D:\\GitHub\\react-money-manager\\src\\App.js":"4","D:\\GitHub\\react-money-manager\\src\\util\\Backend.js":"5","D:\\GitHub\\react-money-manager\\src\\components\\NavBar\\NavBar.js":"6","D:\\GitHub\\react-money-manager\\src\\components\\UpdateUser\\UpdateUserInfo.js":"7","D:\\GitHub\\react-money-manager\\src\\components\\UpdateUser\\UpdateUserPassword.js":"8","D:\\GitHub\\react-money-manager\\src\\components\\Setting\\Setting.js":"9","D:\\GitHub\\react-money-manager\\src\\private-routes\\PrivateRoutes.js":"10","D:\\GitHub\\react-money-manager\\src\\pages\\Manage.js":"11","D:\\GitHub\\react-money-manager\\src\\pages\\LoginPage.js":"12","D:\\GitHub\\react-money-manager\\src\\components\\Login\\Login.js":"13","D:\\GitHub\\react-money-manager\\src\\index.js":"14","D:\\GitHub\\react-money-manager\\src\\services\\localStorageService.js":"15","D:\\GitHub\\react-money-manager\\src\\reportWebVitals.js":"16","D:\\GitHub\\react-money-manager\\src\\config\\routes.js":"17","D:\\GitHub\\react-money-manager\\src\\reducer.js":"18"},{"size":612,"mtime":1610630741762,"results":"19","hashOfConfig":"20"},{"size":3938,"mtime":1610630446216,"results":"21","hashOfConfig":"20"},{"size":1423,"mtime":1610619660100,"results":"22","hashOfConfig":"20"},{"size":407,"mtime":1610623238602,"results":"23","hashOfConfig":"20"},{"size":1807,"mtime":1610582205848,"results":"24","hashOfConfig":"20"},{"size":1807,"mtime":1611028586311,"results":"25","hashOfConfig":"20"},{"size":2817,"mtime":1610593009819,"results":"26","hashOfConfig":"20"},{"size":2869,"mtime":1610582375869,"results":"27","hashOfConfig":"20"},{"size":1362,"mtime":1610595763394,"results":"28","hashOfConfig":"20"},{"size":874,"mtime":1611674740985,"results":"29","hashOfConfig":"20"},{"size":1486,"mtime":1610633586394,"results":"30","hashOfConfig":"20"},{"size":415,"mtime":1610582731509,"results":"31","hashOfConfig":"20"},{"size":2605,"mtime":1610633202973,"results":"32","hashOfConfig":"20"},{"size":432,"mtime":1611674455726,"results":"33","hashOfConfig":"20"},{"size":407,"mtime":1610574722700,"results":"34","hashOfConfig":"20"},{"size":362,"mtime":1608173264842,"results":"35","hashOfConfig":"20"},{"size":588,"mtime":1610581858178,"results":"36","hashOfConfig":"20"},{"size":138,"mtime":1611674496757,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19odfyx",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\react-money-manager\\src\\pages\\Welcome.js",["80","81"],"D:\\GitHub\\react-money-manager\\src\\components\\RegistrationForm\\RegistrationForm.js",["82"],"D:\\GitHub\\react-money-manager\\src\\components\\ModalForm\\ModalForm.js",["83"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Modal, Button, Anchor  } from 'antd';\r\n\r\nconst { Link } = Anchor;\r\n\r\nclass ModalForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  buttonStyleOnChange = (buttonStyle, buttonElement) => {\r\n    if (buttonStyle === 'button') {\r\n      return (<Button type=\"primary\" onClick={this.showModal}>{buttonElement}</Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Anchor onClick={this.showModal}>\r\n          <Link title={buttonElement}/>\r\n        </Anchor>);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible, loading } = this.state;\r\n    return (\r\n      <>\r\n        {this.buttonStyleOnChange(this.props.buttonStyle, this.props.buttonElement)}\r\n        <Modal\r\n          visible={visible}\r\n          title={this.props.title}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[]}>\r\n          {this.props.form}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ModalForm;",["84","85"],"D:\\GitHub\\react-money-manager\\src\\App.js",[],"D:\\GitHub\\react-money-manager\\src\\util\\Backend.js",[],"D:\\GitHub\\react-money-manager\\src\\components\\NavBar\\NavBar.js",["86"],"import React, {useState, useEffect, useRef } from 'react';\r\nimport LocalStorageService from '../../services/localStorageService'\r\nimport jwtDecode from 'jwt-decode';\r\nimport './NavBar.css'\r\nimport Setting from '../Setting/Setting';\r\nimport ModalForm from '../ModalForm/ModalForm';\r\nimport Login from '../Login/Login';\r\n\r\nconst NavBar = props => {\r\n  const [username, setUsername] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  // const [path, setPath] = useState(window.location.pathname);\r\n  const changeTool = role => {\r\n    if (role === 'user') {\r\n      return (\r\n        <div className='NavBar' id='username-container'>\r\n          <p className='NavBar' id='username'>{firstName}</p>\r\n          <p className='NavBar' id='username'>{lastName}</p>\r\n          <Setting \r\n            username={username} \r\n            firstName={firstName} \r\n            lastName={lastName} \r\n            setRole={props.setRole}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (role === 'guest') {\r\n      return (\r\n        <>\r\n          <ModalForm \r\n          title='Login'\r\n          form={<Login setRole={props.setRole}/>}\r\n          buttonStyle='anchor' \r\n          buttonElement='Login'/>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = LocalStorageService.getToken();\r\n    if(token) {\r\n      const user = jwtDecode(token);\r\n      setUsername(user.username);\r\n      setFirstName(user.firstName);\r\n      setLastName(user.lastName);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className='NavBar' id='nav-container'>\r\n          <h1 className='NavBar' id='logo'>Money Manager</h1>\r\n          {changeTool(props.role)}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","D:\\GitHub\\react-money-manager\\src\\components\\UpdateUser\\UpdateUserInfo.js",[],"D:\\GitHub\\react-money-manager\\src\\components\\UpdateUser\\UpdateUserPassword.js",[],"D:\\GitHub\\react-money-manager\\src\\components\\Setting\\Setting.js",["87"],"import React from 'react';\r\nimport ModalForm from '../ModalForm/ModalForm';\r\nimport UpdateUserInfo from '../UpdateUser/UpdateUserInfo';\r\nimport UpdatePassword from '../UpdateUser/UpdateUserPassword';\r\nimport LocalStorageService from '../../services/localStorageService';\r\nimport { Menu, Dropdown, notification } from 'antd';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nconst Setting = props => {\r\n  const logout = () => {\r\n      LocalStorageService.removeToken();\r\n      props.setRole('guest');\r\n      notification.success({\r\n        message: `You were logout.`,\r\n        placement: 'bottomRight'\r\n      });\r\n  }\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <ModalForm form={<UpdateUserInfo username={props.username} firstName={props.firstName} lastName={props.lastName}/>} style2={true} title='Update profile' des='Update profile'/>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <ModalForm form={<UpdatePassword />} style2={true} title='Update password' des='Update password'/>\r\n      </Menu.Item>\r\n      <Menu.Item onClick={logout} danger>Logout</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Dropdown overlay={menu}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <SettingOutlined style={{fontSize: 20, color: 'black'}}/>\r\n      </a>\r\n    </Dropdown>\r\n  );\r\n\r\n}\r\n\r\nexport default Setting;","D:\\GitHub\\react-money-manager\\src\\private-routes\\PrivateRoutes.js",["88"],"D:\\GitHub\\react-money-manager\\src\\pages\\Manage.js",["89","90","91","92"],"D:\\GitHub\\react-money-manager\\src\\pages\\LoginPage.js",[],"D:\\GitHub\\react-money-manager\\src\\components\\Login\\Login.js",["93"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\r\nimport Backend from '../../util/Backend';\r\nimport LocalStorageService from '../../services/localStorageService';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Login = props => {\r\n\r\n  const history = useHistory();\r\n  \r\n  const onFinish = values => {\r\n    const body = {\r\n      username: values.username,\r\n      password: values.password,\r\n    };\r\n    Backend.login(body\r\n      ).then( result => {\r\n        LocalStorageService.setToken(result.data.token);\r\n        props.setRole('user');\r\n        if (result.data) {\r\n          notification.success({\r\n            message: result.data.message,\r\n            placement: 'bottomRight'\r\n          });\r\n        }\r\n        history.push('/manage');\r\n      }).catch( err => {\r\n        if (err.response && err.response.data) {\r\n          notification.error({\r\n            message: err.response.data.message,\r\n            placement: 'bottomRight'\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: `Login failed.`,\r\n            placement: 'bottomRight'\r\n          });\r\n        }\r\n\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form style={{paddingRight: 60, margin: 'auto'}}\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Login;",["94","95"],"D:\\GitHub\\react-money-manager\\src\\index.js",[],"D:\\GitHub\\react-money-manager\\src\\services\\localStorageService.js",["96"],"D:\\GitHub\\react-money-manager\\src\\reportWebVitals.js",[],"D:\\GitHub\\react-money-manager\\src\\config\\routes.js",["97"],"D:\\GitHub\\react-money-manager\\src\\reducer.js",[],{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"102","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"103","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":10},{"ruleId":"98","severity":1,"message":"104","line":48,"column":22,"nodeType":"100","messageId":"101","endLine":48,"endColumn":29},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":37,"nodeType":"100","messageId":"101","endLine":1,"endColumn":43},{"ruleId":"109","severity":1,"message":"110","line":33,"column":7,"nodeType":"111","endLine":33,"endColumn":74},{"ruleId":"98","severity":1,"message":"112","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"113","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":15},{"ruleId":"98","severity":1,"message":"114","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":14},{"ruleId":"98","severity":1,"message":"115","line":12,"column":10,"nodeType":"100","messageId":"101","endLine":12,"endColumn":12},{"ruleId":"98","severity":1,"message":"116","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":20},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":20,"column":1,"nodeType":"121","endLine":25,"endColumn":3},{"ruleId":"119","severity":1,"message":"120","line":20,"column":1,"nodeType":"121","endLine":27,"endColumn":3},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'Tooltip' is defined but never used.","'loading' is assigned a value but never used.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'Backend' is defined but never used.","'name' is assigned a value but never used.","'id' is assigned a value but never used.","'withRouter' is defined but never used.",["122"],["123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]